buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        //noinspection GradleDynamicVersion
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'io.fabric'

def localProperties = new Properties()
localProperties.load(new FileInputStream(file('../local.properties')))

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "net.labhackercd.nhegatu"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 6
        versionName "1.0.0-SNAPSHOT"
        manifestPlaceholders = [ fabricApiKey: localProperties.getProperty('fabric.api.key') ]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'http://dl.bintray.com/amulyakhare/maven'
    }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    // Android support libraries and it's helper libraries
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:recyclerview-v7:22.2.0'

    // Dependency Injection mechanism
    compile 'javax.inject:javax.inject:1'
    compile 'com.squareup.dagger:dagger:1.2.2'
    provided 'com.squareup.dagger:dagger-compiler:1.2.2'

    // Networking
    compile 'com.squareup.okhttp:okhttp:2.4.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.4.0'
    compile 'com.squareup.picasso:picasso:2.5.2'

    // Liferay Client
    compile('com.liferay.mobile:liferay-android-sdk:6.2.0.17') {
        exclude module: 'httpclient'
    }

    // BBCode parser
    compile 'org.kefirsf:kefirbb:1.0'

    // ORM
    compile 'com.squareup.sqlbrite:sqlbrite:0.1.0'

    // Utility libraries
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.google.guava:guava-jdk5:17.0'
    compile 'com.github.frankiesardo:auto-parcel:0.3'
    provided 'com.github.frankiesardo:auto-parcel-processor:0.3'

    // More utility
    compile 'io.reactivex:rxjava:1.0.11'
    compile 'io.reactivex:rxandroid:0.24.0'
    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'com.jakewharton.timber:timber:3.1.0'
    compile 'com.ocpsoft:ocpsoft-pretty-time:1.0.7'
    compile 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'

    // YouTube video upload
    compile 'com.google.android.gms:play-services-base:6.5.87'
    compile 'com.google.android.gms:play-services-identity:6.5.87'
    compile('com.google.api-client:google-api-client-gson:1.19.1') {
        exclude module: 'google-api-client'
        exclude module: 'google-http-client'
    }
    compile('com.google.api-client:google-api-client-android:1.19.1') {
        exclude module: 'httpclient'
        exclude module: 'google-http-client'
    }
    compile 'com.google.apis:google-api-services-youtube:v3-rev125-1.19.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.2.2@aar') {
        transitive = true;
    }
}
